


import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

class Person implements Comparable<Person>{
	private String name;
	
	public Person(String name) {
		this.name = name;
		}
	
	public String toString() {
		return name;
	}
	
	

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Person other = (Person) obj;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	@Override
	public int compareTo(Person o) {
		int len1 = name.length();
		int len2 = o.name.length();
		
		if(len1 > len2) {
			return 1;
		}
		else if(len1 < len2) {
			return -1;
			
		}
		
		return 0;
		}
		
	}
	
	


public class First{
	public static void main(String[] args) {
		
		List<Person> list = new ArrayList<Person>();
		Set <Person> set = new TreeSet<Person>();
		
		add(list);
		add(set);
		
		Collections.sort(list);
		
		System.out.println("output of list");
		show(list); // Sorts by number of letters in each name
		
		System.out.println();
		
		System.out.println("output of set");
		show(set);  // Sorts by number of letters in each name but only displays one of two names whose length is equal.
		
	}
	
	private static void add(Collection<Person> col) {
		col.add(new Person("joe"));
		col.add(new Person("mike"));
		col.add(new Person("alex"));
		col.add(new Person("albert"));
		col.add(new Person("robinson"));
		col.add(new Person("xavier"));
	}
	
	private static void show(Collection<Person> col) {
		for(Person value : col) {
			System.out.println(value);
		}
	}
}
		


// output

output of list
joe
mike
alex
albert
xavier
robinson

output of set
joe
mike
albert
robinson
